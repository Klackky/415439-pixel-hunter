@import "fonts";

.game {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

.game__timer {
  @include bold-text;
  font-size: 60px;
  position: absolute;
  margin-top: 0;
  top: 25px;
  left: 50%;
  transform: translateX(-50%);
}

.blinking{
	animation:blinkingTimer 1s linear infinite;
}

@keyframes blinkingTimer{
  50% {
    opacity: 0;
  }
}
.game__option {
   position: relative;
   cursor: pointer;
}
.game__option .tooltiptext {
  visibility: hidden;
    width: 120px;
    background-color: white;
    font-color: black;
    text-align: center;
    font-size: 16px;
    border-radius: 6px;
    padding: 5px 0;
    left: 40%;
    right: 50%;
    top: 50%;

    /* Position the tooltip */
    position: absolute;
    z-index: 1;
}
.game__option:hover .tooltiptext{
    outline: 2px solid red;
    visibility: visible;
  }


.fade-out {
    opacity: 0;
    -webkit-transition: opacity 2s linear;
    -moz-transition: opacity 2s linear;
    -o-transition: opacity 2s linear;
    transition: opacity 2s linear;
}

.fade-in {
  opacity: 1;
}

.game__lives {
  position: absolute;
  top: 20px;
  right: 0;
}

.game__task {
  font-size: 22px;
  line-height: 35px;
}

.game__content {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
}

.game__option  {
  position: relative;
  border: 10px solid transparent;

  width: 468px;
  height: 458px;
  font-size: 0;

  text-align: center;
  vertical-align: middle;

}


.game__answer input {
  position: absolute;
  left: -99999px;

  & + span {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 70px;
    background: rgba(0, 0, 0, 0.5) no-repeat center;

    &:hover {
      background-color: #000000;
    }

    font-size: 0;
  }

  &:checked + span {
    background-color: #df4e4e;
  }
}

.game__answer {
  position: absolute;
  width: 78px;
  height: 78px;

  bottom: 30px;

  &--photo {
    input + span {
      background-image: url("../img/photo_big.png");
    }
    left: 30px;
  }

  &--paint {
    input + span {
      background-image: url("../img/paint_big.png");
    }
    right: 30px;
  }
}

.game__content--wide {

  .game__option {
    width: 705px;
    height: 455px;
  }

  .game__answer {
    top: 208px;
  }

  .game__answer--photo {
    left: -100px
  }

  .game__answer--paint {
    right: -100px;
  }
}

.game__content--triple .game__option {
  cursor: pointer;

  width: 304px;
  height: 455px;

  &:hover {
    border-color: #df4e4e;
  }

  &:active::after {
    content: "";
    position: absolute;

    z-index: 1;

    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background-color: rgba(223, 78, 78, 0.4);
  }

}

$count: 10;
$time: 2; //in seconds
$size: 100;
$color: #ffffff;

.preloader {
  /* size */
  width: $size + px;
  height: $size + px;
  position: absolute;
  left: 53%;
  top: 36.5%;
  transform: translateX(-50%) translateY(-50%);
  animation: rotatePreloader $time + s infinite ease-in;
}
.preloader-text {
  font-size: 17px;
  font-family: 'Roboto', sans-serif;
  position: absolute;
  top: 43%;
  left: 45%;
  color: white;
}
@keyframes rotatePreloader {
  0% {
  transform: translateX(-50%) translateY(-50%) rotateZ(0deg);
  }
  100% {
  transform: translateX(-50%) translateY(-50%) rotateZ(-360deg);
  }
}
.preloader div {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
.preloader div:before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0%;
  width: 10%;
  height: 10%;
  background-color: $color;
  transform: translateX(-50%);
  border-radius: 50%;
}

@for $i from 1 through $count {
  .preloader div:nth-child(#{$i}) {
    transform: rotateZ(((360 / $count) * ($i - 1)) + deg);
    animation: rotateCircle + $i $time + s infinite linear;
    z-index: $count - $i;
  }
  @keyframes rotateCircle#{$i} {
    #{percentage(((50 / $count) * ($i - 1)) / 100)} {
      opacity: 0;
    }
    #{percentage((((50 / $count) + 0.0001) * ($i - 1)) / 100)} {
      opacity: 1;
      transform: rotateZ((0 - ((360 / $count) * ($i - 2))) + deg);
    }
    #{percentage((((50 / $count) * ($i - 0)) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    #{percentage(((50 + ((50 / $count) * ($i - 0))) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    100% {
      transform: rotateZ((0 - ((360 / $count) * ($count - 1))) + deg);
      opacity: 1;
    }
  }
}

@keyframes blink {
    /**
     * At the start of the animation the dot
     * has an opacity of .2
     */
    0% {
      opacity: .2;
    }
    /**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
    20% {
      opacity: 1;
    }
    /**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
    100% {
      opacity: .2;
    }
}

.preloader-text span {
    font-size: 20px;
    /**
     * Use the blink animation, which is defined above
     */
    animation-name: blink;
    /**
     * The animation should take 1.4 seconds
     */
    animation-duration: 1.4s;
    /**
     * It will repeat itself forever
     */
    animation-iteration-count: infinite;
    /**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
    animation-fill-mode: both;
}

.preloader-text span:nth-child(2) {
    /**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .2s;
}

.preloader-text span:nth-child(3) {
    /**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .4s;
}
